@inject HttpClient http
@inject NavigationManager navegador
@inject IToastService toaster

@attribute [Authorize(Roles = "usuarios")]

@page "/cargo/registrar"
@layout AppLayout

<EditForm Model="Cargo" OnValidSubmit="Enviar">
    <DataAnnotationsValidator />

    <FormField Label="Nombre">
        <TextField @bind-Value="Cargo.Nombre" />
        <FormFeedback For="() => Cargo.Nombre" Help="Nombre que identifica el cargo (debe ser único)" />
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Pedidos">
            <span>Tendrá permiso para supervisar los pedidos.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Usuarios">
            <span>Puede crear usuarios y asignar cargos</span>
        </CheckboxField>
        <FormFeedback For="() => Cargo.Usuarios" Help="También creará notificaciones para el personal" />
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Logistica">
            <span>Tendrá acceso al inventario, con lo que podrá realizar entradas y salidas del mismo.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Clientes">
            <span>Manejará la información de los clientes en el sistema.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Solicitar">
            <span>Podrá solicitar pedidos a nombre de los clientes (usar para asesores comerciales).</span>
        </CheckboxField>
    </FormField>

    <FormField IsLoading="Cargando">
        <SubmitButton>Registrar</SubmitButton>
        <CancelButton GoTo="/cargo">Cancelar</CancelButton>
    </FormField>
</EditForm>

@code {
    private Cargo Cargo { get; set; } = new Cargo();

    private bool Cargando = false;

    private async Task Enviar()
    {
        Cargando = true;

        try
        {
            HttpResponseMessage respuesta = await http.PostAsJsonAsync("/api/cargo", Cargo);

            if (respuesta.IsSuccessStatusCode)
            {
                navegador.NavigateTo("/cargo");
            }

            else
            {
                toaster.ShowWarning("No se logro realizar el registro, verifica los datos e intenta nuevamente.");
            }
        }
        catch
        {
            toaster.ShowError("Hubo un error desconocido, intenta nuevamente más tarde.");
            throw;
        }

        finally
        {
            Cargando = false;
        }
    }
}