@inject HttpClient http
@inject NavigationManager navegador

@page "/cargo/modificar/{Id:int}"
@layout AppLayout

<EditForm Model="Cargo" OnValidSubmit="Enviar">
    <DataAnnotationsValidator />

    <FormField Label="Nombre">
        <TextField @bind-Value="Cargo.Nombre" />
        <FormFeedback For="() => Cargo.Nombre" Help="Nombre que identifica el cargo (debe ser único)" />
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Pedidos">
            <span>Tendrá permiso para supervisar los pedidos.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Usuarios">
            <span>Puede crear usuarios y asignar cargos</span>
        </CheckboxField>
        <FormFeedback For="() => Cargo.Usuarios" Help="También creará notificaciones para el personal" />
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Logistica">
            <span>Tendrá acceso al inventario, con lo que podrá realizar entradas y salidas del mismo.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Clientes">
            <span>Manejará la información de los clientes en el sistema.</span>
        </CheckboxField>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cargo.Solicitar">
            <span>Podrá solicitar pedidos a nombre de los clientes (usar para asesores comerciales).</span>
        </CheckboxField>
    </FormField>

    <div class="field is-grouped">
        <div class="control">
            <button type="submit" class="button is-primary">Registrar</button>
        </div>

        <div class="control">
            <a href="/cargo" class="button">Cancelar</a>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Cargo Cargo { get; set; }

    private string mensaje;
    private bool cargando = false;

    protected override async Task OnInitializedAsync() {
        Cargo = await http.GetFromJsonAsync<Cargo>($"/api/cargo/{Id}");
    }

    private async Task Enviar() {
        cargando = true;
        HttpResponseMessage respuesta = await http.PutAsJsonAsync($"/api/cargo/{Id}", Cargo);

        if (respuesta.IsSuccessStatusCode) {
            navegador.NavigateTo("/cargo");
        }

        else {
            mensaje = "No se logro editar el registro";
        }

        cargando = false;
    }
}