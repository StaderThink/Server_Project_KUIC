@inject HttpClient http
@inject NavigationManager navegador

@page "/categoria/registrar"
@layout AppLayout
@attribute [Authorize(Roles = "logistica")]
    
    <div class="level">
        <div class="level-left">
            <h3 class="title is-3">Registrar nueva categoría</h3>
        </div>
        <div class="level-right">
            <nav class="breadcrumb is-small">
                <ul>
                    <li><a href="/categoria">Categoría</a></li>
                    <li class="is-active"><a href="#">Registrar</a></li>
                </ul>
            </nav>
        </div>
    </div>

    <hr />

    <EditForm Model="categoria" OnValidSubmit="Enviar">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <FormField Label="Nombre">
            <TextField id="nombre" @bind-Value="categoria.Nombre" />
            <FormFeedback For="() => categoria.Nombre" />
        </FormField>

        <FormField Label="Descripción">
            <TextField id="descripcion" @bind-Value="categoria.Descripcion"></TextField>
            <FormFeedback For="() => categoria.Descripcion" Help="Opcional"></FormFeedback>
        </FormField>

        <div class="level">
            <div class="level-left"><span></span></div>
            <div class="level-right">
                <FormField IsLoading="cargando">
                    <CancelButton To="/categoria">Cancelar</CancelButton>
                    <SubmitButton>Registrar</SubmitButton>
                </FormField>
            </div>
        </div>
    </EditForm>

@code {
    Categoria categoria { get; set; } = new Categoria();

    bool cargando = false;

    async Task Enviar()
    {
        cargando = true;
        HttpResponseMessage respuesta = await http.PostAsJsonAsync("/api/categoria", categoria);

        if (respuesta.IsSuccessStatusCode)
        {
            navegador.NavigateTo("/categoria");
        }
    }
}
