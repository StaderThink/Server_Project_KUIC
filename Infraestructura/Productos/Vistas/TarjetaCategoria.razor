@inject HttpClient http
@inject NavigationManager navegador

    <div class="card">
        <div class="card-content">
            <div class="content">
                <h6 class="title is-6">@categoria.Nombre.ToCapitalize()</h6>
                <p>@categoria.Descripcion.ToCapitalize()</p>
            </div>
        </div>
        <div class="card-footer">
            <a class="card-footer-item" @onclick="Editar">Editar</a>

            @if (cargando)
            {
                <a class="card-footer-item" disabled>Eliminar</a>
            }

            else
            {
                <a class="card-footer-item" @onclick="Eliminar">Eliminar</a>
            }
        </div>
    </div>

@code {
    [Parameter]
    public Categoria categoria { get; set; }

    [Parameter]
    public EventCallback<Categoria> OnCategoriaEliminada { get; set; }

    bool cargando = false;

    async Task Eliminar()
    {
        cargando = true;
        HttpResponseMessage respuesta = await http.DeleteAsync($"/api/categoria/{categoria.Id}");

        if (respuesta.IsSuccessStatusCode && OnCategoriaEliminada.HasDelegate)
        {
            await OnCategoriaEliminada.InvokeAsync(categoria);
        }

        cargando = false;
    }

    void Editar()
    {
        navegador.NavigateTo($"/categoria/modificar/{categoria.Id}");
    }
}