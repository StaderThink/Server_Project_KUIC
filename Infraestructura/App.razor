@inject ILocalStorageService localStorage
@inject HttpClient http
@inject NavigationManager navegador

<Router AppAssembly="@typeof(Program).Assembly">
	<Found Context="routeData">
		@if (cargando) {
			<LoadingPage/>
		}

		else {
			<RouteView RouteData="@routeData" />
		}
	</Found>
    <NotFound>
        <LayoutView Layout="@typeof(BaseLayout)">
            <p>Oops... todavia no hay nada en esta ruta.</p>
        </LayoutView>
    </NotFound>
</Router>


@code {
    bool cargando = true;

    async Task<bool> ValidarSesion() {
        HttpResponseMessage respuesta = await http.GetAsync("/api/sesion");
        return respuesta.IsSuccessStatusCode;
    }

    protected override async Task OnInitializedAsync() {
        cargando = true;

        if (await localStorage.ContainKeyAsync("token")) {
            string token = await localStorage.GetItemAsync<string>("token");
            var bearer = new AuthenticationHeaderValue("bearer", token);

            http.DefaultRequestHeaders.Authorization = bearer;

            if (await ValidarSesion() && navegador.BaseUri == navegador.Uri) {
                navegador.NavigateTo("/inicio");
            }
        }

        else {
            navegador.NavigateTo("/");
        }

        cargando = false;
    }
}