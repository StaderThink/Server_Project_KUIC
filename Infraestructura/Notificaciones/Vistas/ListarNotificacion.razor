@using System.Security.Claims
@inject HttpClient http
@page "/notificacion"
@layout AppLayout
@inject AuthenticationStateProvider autentificacion

    <AuthorizeView Roles="usuarios" Context="auth">
        <Authorized>
            <h3 class="title is-3">Listar Notificaciones</h3>

            @if (notificaciones == null)
            {
                <div class="buttons">
                    <a href="/notificacion/registrar" class="button is-primary">Agregar Notificacion</a>
                </div>
                <div class="loader is-medium"></div>
            }
            else
            {
                <div class="buttons">
                    <a href="/notificacion/registrar" class="button is-primary">Agregar Notificacion</a>
                </div>
                <div class="columns is-multiline">
                    @foreach (Notificacion notificacion in notificaciones)
                    {
                        <div class="column is-full-mobile is-half-tablet is-one-third-desktop">
                            <TarjetaNotificacion notificacion="notificacion" OnNotificacionEliminada="ObtenerListado"></TarjetaNotificacion>
                        </div>    
                    }
                </div>
            }
</Authorized>
        <NotAuthorized>
            <h2>No tienes permisos para acceder a esta vista</h2>
        </NotAuthorized>
    </AuthorizeView>

@code {
    Notificacion[] notificaciones { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await ObtenerListado();
    }

    async Task ObtenerListado()
    {
        try
        {
            var estado = await autentificacion.GetAuthenticationStateAsync();
            var serial = estado.User.FindFirst(ClaimTypes.SerialNumber);
            int idAutor = int.Parse(serial.Value);

            notificaciones = await http.GetFromJsonAsync<Notificacion[]>($"/api/notificacion/autor/{idAutor}");
        }

        catch
        {
            notificaciones = new Notificacion[0];
            throw;
        }
    }
}
