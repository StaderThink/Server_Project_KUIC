@inject HttpClient http
@inject NavigationManager navegador

@page "/notificacion/modificar/{Id:int}"
@layout AppLayout

<h3>Editar notificacion</h3>

@if (notificacion is null)
{
    <div class="loader is-medium"></div>
}

<form @onsubmit="Enviar">
    <div class="field">
        <label for="texto">Mensaje</label>
        <input id="texto" class="input" type="text" @bind="notificacion.Texto" required/>
    </div>
    <div class="field">
        <label for="inicio">Fecha de inicio</label>
        <input id="inicio" class="input" type="datetime-local" @bind="notificacion.FechaInicio" @bind:format="@CultureInfo.CurrentCulture.DateTimeFormat.SortableDateTimePattern" step="1" required/>
    </div>
    <div class="field">
        <label for="fin">Fecha de finalización</label>
        <input id="fin" class="input" type="datetime-local" @bind="notificacion.FechaFin" @bind:format="@CultureInfo.CurrentCulture.DateTimeFormat.SortableDateTimePattern" step="1" required/>
    </div>
    <div class="field">
        <label>Autor</label>
        <select class="input" @bind="notificacion.Autor" required>
            <option value="0" disabled>Seleccionar...</option>

            @foreach (Usuario usuario in usuarios)
            {
                <option value="@usuario.Id">@(usuario.Nombre.ToCapitalize())</option>
            }
        </select>
    </div>
    <div class="field">
        <div class="control is-grouped">
            <button class="is-primary">Actualizar</button>
            <a href="/notificacion" class="button is-outlined">Cancelar</a>
        </div>
    </div>
</form>

@code {
    Usuario[] usuarios { get; set; } = new Usuario[0];

    Notificacion notificacion { get; set; } = new Notificacion();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        usuarios = await http.GetFromJsonAsync<Usuario[]>("/api/usuario");
        notificacion = await http.GetFromJsonAsync<Notificacion>($"/api/notificacion/{Id}");
    }

    async Task Enviar()
    {
        HttpResponseMessage respuesta = await http.PutAsJsonAsync($"/api/notificacion/{Id}", notificacion);

        if (respuesta.IsSuccessStatusCode)
        {
            navegador.NavigateTo("/notificacion");
        }
    }
}
