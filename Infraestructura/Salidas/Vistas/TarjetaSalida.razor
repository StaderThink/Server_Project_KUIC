@inject HttpClient http
@inject NavigationManager navegador

    <div class="card">
        <div class="card-content">
            <div class="content">
                @if (detalles is null)
                {
                    <p>Espere...</p>
                }
                else
                {
                    <p>@detalles.Count() Productos(s). <button class="button is-small" @onclick="AbrirModal">Ver detalle</button></p>
                }

                @if (mostrarModal)
                {
                    <div class="modal is-active">
                        <div class="modal-background"></div>
                        <div class="modal-card">
                            <header class="modal-card-head">
                                <span class="modal-card-title">Detalle de entrada #@salida.Id</span>
                                <button class="delete" @onclick="CerrarModal" aria-label="close"></button>
                            </header>
                            <section class="modal-card-body">
                                @foreach (var detalle in detalles)
                                {
                                    <ProductDetail detalle="@detalle" />
                                }
                            </section>
                        </div>
                    </div>
                }

                <p>@salida.Fecha.ToShortDateString()</p>

                @if (salida.Pedido == 0)
                {
                    <p>Sin pedido</p>
                }
                else
                {
                    <p>@salida.Pedido</p>
                }

                <p>@salida.Observacion.ToCapitalize()</p>
            </div>
        </div>
    </div>
   
@code {
    #region Modal
    bool mostrarModal = false;

    void AbrirModal() => mostrarModal = true;
    void CerrarModal() => mostrarModal = false;
    #endregion

    [Parameter]
    public Salida salida { get; set; }

    [Parameter]
    public EventCallback<Salida> OnSalidaEliminada { get; set; }

    DetalleSalida[] detalles { get; set; } = new DetalleSalida[0];

    Pedido[] pedidos { get; set; } = new Pedido[0];

    protected override async Task OnInitializedAsync()
    {
        detalles = await http.GetFromJsonAsync<DetalleSalida[]>($"/api/detalleSalida/salida/{salida.Id}");
    }
}
