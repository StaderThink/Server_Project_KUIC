@inject HttpClient http
@inject AuthenticationStateProvider autentificacion
@inject IToastService toaster

<EditForm Model="Usuario" OnValidSubmit="Enviar">
    <DataAnnotationsValidator />

    <FormField Label="Nombre">
        <TextField id="nombre" @bind-Value="Usuario.Nombre" />
        <FormFeedback For="() => Usuario.Nombre" />
    </FormField>

    <FormField Label="Apellido">
        <TextField id="apellido" @bind-Value="Usuario.Apellido" />
        <FormFeedback For="() => Usuario.Apellido" />
    </FormField>

    <FormField Label="Correo">
        <EmailField id="correo" @bind-Value="Usuario.Correo" />
        <FormFeedback For="() => Usuario.Correo" />
    </FormField>

    <FormField Label="Correo">
        <NumberField id="telefono" @bind-Value="Usuario.Telefono" />
        <FormFeedback For="() => Usuario.Telefono" />
    </FormField>

    <FormButtons IsLoading="Guardando">
        <SubmitButton>Actualizar perfil</SubmitButton>
    </FormButtons>
</EditForm>

@code {
    private Usuario Usuario { get; set; } = new Usuario();
    private bool Guardando { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Usuario = await http.GetFromJsonAsync<Usuario>($"/api/sesion");
        }

        catch
        {
            throw;
        }
    }

    private async Task Enviar()
    {
        Guardando = true;

        try
        {
            var respuesta = await http.PutAsJsonAsync<Usuario>($"/api/sesion", Usuario);

            if (respuesta.IsSuccessStatusCode)
            {
                toaster.ShowMessage("Datos actualizados correctamente");
            }

            else
            {
                toaster.ShowWarning("No se realizo los datos, recarga la página e intenta nuevamente");
            }
        }

        catch
        {
            toaster.ShowError("Hubo un error en el proceso, recarga la página e intenta nuevamente");
            throw;
        }

        finally
        {
            Guardando = false;
        }
    }
}
