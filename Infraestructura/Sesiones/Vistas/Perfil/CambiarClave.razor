@inject HttpClient http
@inject AuthenticationStateProvider autentificacion
@inject IToastService toaster

@using Aplicacion.Sesiones.Formularios

<EditForm Model="Formulario" OnValidSubmit="Enviar">
    <DataAnnotationsValidator />

    <FormField Label="Contraseña actual">
        <PasswordField id="claveActual" @bind-Value="Formulario.ClaveAnterior" HiddenOnly />
        <FormFeedback For="() => Formulario.ClaveAnterior" />
    </FormField>

    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Nueva contraseña">
                <PasswordField id="nuevaClave" @bind-Value="Formulario.NuevaClave" />
                <FormFeedback For="() => Formulario.NuevaClave" Help="Debe tener minimo 6 caracteres" />
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Confirme su nueva contraseña">
                <PasswordField id="confirmarClave" @bind-Value="Formulario.ConfirmacionClave" />
                <FormFeedback For="() => Formulario.ConfirmacionClave" />
            </FormField>
        </div>
    </div>

    <div class="level">
        <div class="level-left"><span></span></div>
        <div class="level-right">
            <FormButtons IsLoading="Guardando">
                <SubmitButton>Cambiar clave</SubmitButton>
            </FormButtons>
        </div>
    </div>
</EditForm>

@code {
    private FormularioCambiarClave Formulario { get; set; } = new FormularioCambiarClave();
    private bool Guardando { get; set; } = false;

    private async Task Enviar()
    {
        Guardando = true;

        try
        {
            var respuesta = await http.PutAsJsonAsync("/api/sesion/cambiar_clave", Formulario);

            if (respuesta.IsSuccessStatusCode)
            {
                var proveedor = (ProveedorAutenticacion) autentificacion;
                await proveedor.SignOut();
            }
        }

        catch
        {
            toaster.ShowError("Hubo un error en el proceso, recarga la página e intenta nuevamente");
            throw;
        }

        finally
        {
            Guardando = false;
        }
    }
}
