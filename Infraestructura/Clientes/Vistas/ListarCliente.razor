@inject HttpClient http
@inject NavigationManager navegador

@attribute [Authorize(Roles = "clientes, solicitar")]

@page "/cliente"
@page "/cliente/{busqueda}"
@layout AppLayout

<AuthorizeView Roles="clientes, solicitar">
    <Authorized>
        @if (cargando)
        {
            <div class="loader is-medium"></div>

        }
        else
        {
            <div class="container">
                <h2 class="title is-2">Listado de clientes</h2>

                <div class="buttons">
                    <a class="button is-primary" href="/cliente/registrar">Registrar cliente</a>
                </div>
                @if (lista is null)
                {
                    <p>Algo salio muy mal...</p>
                }
                else
                {
                    <div class="columns is-multiline">
                        @foreach (var cliente in lista)
                        {
                            <div class="column is-full-mobile is-half-tablet is-one-third-desktop">
                                <TarjetaCliente cliente="cliente" onDeleted="ObtenerListado" />
                            </div>

                        }
                    </div>
                }
            </div>
        }
    </Authorized>

    <NotAuthorized>
        <p>No tienes permisos para acceder a esta vista</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    Cliente[] lista { get; set; }

    bool cargando = true;

    [Parameter]
    public string busqueda { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerListado();
    }

    private async Task ObtenerListado()
    {
        cargando = true;
        HttpResponseMessage respuesta = await http.GetAsync($"/api/cliente?buscar={busqueda}");

        try
        {
            if (respuesta.StatusCode == HttpStatusCode.OK)
            {
                lista = await respuesta.Content.ReadFromJsonAsync<Cliente[]>();
            }

            else
            {
                lista = null;
            }
        }

        catch (Exception ex)
        {
            lista = new Cliente[0];
            Console.WriteLine(ex);
        }

        finally
        {
            cargando = false;
        }
    }
}
