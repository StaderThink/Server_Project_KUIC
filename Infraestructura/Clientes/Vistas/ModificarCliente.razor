@inject HttpClient http
@inject NavigationManager navegador
@inject IToastService toaster

@attribute [Authorize(Roles = "clientes, solicitar")]

@page "/cliente/modificar/{Id:int}"
@layout AppLayout

<nav class="breadcrumb">
    <ul>
        <li><a href="/cliente">Cliente</a></li>
        <li class="is-active"><a href="#">Registrar</a></li>
    </ul>
</nav>

<h3 class="title is-3">Modificar Cliente</h3>
<hr />

<EditForm Model="Cliente" OnValidSubmit="Enviar">
    <DataAnnotationsValidator />

    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Rut">
                <NumberField id="rut" @bind-Value="Cliente.Rut" disabled />
                <FormFeedback For="() => Cliente.Rut" />
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Nombre">
                <TextField id="nombre" @bind-Value="Cliente.Nombre" placeholder="Tienda de la esquina"/>
                <FormFeedback For="() => Cliente.Nombre" Help="Nombre de la empresa"/>
            </FormField>
        </div>
    </div>

    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Encargado">
                <TextField id="encargado" @bind-Value="Cliente.Encargado" placeholder="Carlos Villegas"/>
                <FormFeedback For="() => Cliente.Encargado" Help="Nombre del encargado de la empresa"/>
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Dirección">
                <TextField id="direccion" @bind-Value="Cliente.Direccion" placeholder="Calle 94b # 30c - 15"/>
                <FormFeedback For="() => Cliente.Direccion" Help="Calle, Carrera, Avenida, Diagonal"/>
            </FormField>
        </div>
    </div>

    <FormField Label="Correo Electrónico">
        <EmailField id="correo" @bind-Value="Cliente.Correo" placeholder="ejemplo@ejemplo.com"/>
        <FormFeedback For="() => Cliente.Correo" Help="Dato de contacto"/>
    </FormField>

    <FormField Label="Teléfono">
        <NumberField id="telefono" @bind-Value="Cliente.Telefono" placeholder="######"/>
        <FormFeedback For="() => Cliente.Telefono" Help="Dato de contacto"/>
    </FormField>

    <FormField>
        <CheckboxField @bind-Value="Cliente.Activo">
            <span>¿Va a estar activo en el sistema?</span>
        </CheckboxField>
    </FormField>

    <FormButtons IsLoading="Cargando">
        <CancelButton To="/cliente">Cancelar</CancelButton>
        <SubmitButton>Modificar</SubmitButton>
    </FormButtons>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    private Cliente Cliente = new Cliente();
    private bool Cargando = false;

    protected override async Task OnInitializedAsync()
    {

        Cliente = await http.GetFromJsonAsync<Cliente>($"/api/cliente/{Id}");
    }

    private async Task Enviar()
    {
        Cargando = true;

        try
        {
            HttpResponseMessage respuesta = await http.PutAsJsonAsync($"/api/cliente/{Id}", Cliente);

            if (respuesta.IsSuccessStatusCode)
            {
                navegador.NavigateTo("/cliente");
                toaster.ShowSuccess("Registro modificado exitosamente");

            }

            else
            {
                toaster.ShowWarning("Por favor verifica los datos, no se logró enviar el formulario");
            }
        }

        catch
        {
            toaster.ShowError("Hubo un error desconocido, intenta nuevamente más tarde");

#if DEBUG
            throw;
#endif
        }

        finally
        {
            Cargando = false;
        }
    }
}
