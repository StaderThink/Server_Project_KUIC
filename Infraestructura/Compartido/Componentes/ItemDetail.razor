<div class="field is-grouped">
    <div class="control">
        <input class="input" type="number" @bind="detalle.Cantidad" />
    </div>

    <div class="control is-expanded">
        <div class="select is-fullwidth">
            <select id="producto" class="input" @bind="detalle.Producto" required>
                @foreach (var producto in listadoProductos)
                {
                    <option value="@producto.Id">@(producto.Nombre.ToCapitalize())</option>
                }
            </select>
        </div>
    </div>

    <div class="control">
        <button class="button is-primary is-light" @onclick="Eliminar">
            <ion-icon name="trash-outline"></ion-icon>
        </button>
    </div>
</div>

@code {
    [Parameter]
    public Producto[] listadoProductos { get; set; }

    [Parameter]
    public IDetalle detalle { get; set; }

    [Parameter]
    public EventCallback<IDetalle> OnDeleted { get; set; }

    protected override void OnInitialized()
    {
        if (listadoProductos.Length > 0)
        {
            detalle.Producto = listadoProductos[0].Id;
        }
    }

    public void Eliminar()
    {
        if (OnDeleted.HasDelegate)
        {
            OnDeleted.InvokeAsync(detalle);
        }
    }
}