@inject HttpClient http
@inject NavigationManager navegador

@page "/cliente/modificar/{Id:int}"
@layout AppLayout

@if (cliente is null)
{
    <div class="loader is-medium"></div>
}

else
{
<form @onsubmit="Enviar">
    <div class="field">
        <label for="nombre">Nombre</label>
        <input id="nombre" class="input" type="text" @bind="cliente.Nombre" required/>
    </div>
    <div class="field">
        <label for="encargado">Encargado</label>
        <input id="encargado" class="input" type="text" @bind="cliente.Encargado" required/>
    </div>
    <div class="field">
        <label for="rut">Rut</label>
        <input id="rut" class="input" type="number" placeholder="###" @bind="cliente.Rut" disabled readonly/>
    </div>
    <div class="field">
        <label for="correo">Correo</label>
        <input id="correo" class="input" type="email" @bind="cliente.Correo" required/>
    </div>
    <div class="field">
        <label for="direccion">Direccion</label>
        <input id="direccion" class="input" type="text" @bind="cliente.Direccion" required />
    </div>
    <div class="field">
        <label for="telefono">Telefono</label>
        <input id="telefono"  placeholder="###" minlength="10" class="input" type="number" @bind="cliente.Telefono" required />
    </div>
    <input type="checkbox" @bind="cliente.Activo" />

    <div class="field">
        <div class="control is-gruped">
            <button class="is-prime">Registrar</button>
            <a href="/cliente" class="button is-outline">Cancelar</a>
        </div>
    </div></form>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Cliente cliente { get; set; }

    protected override async Task OnInitializedAsync()
    {
        cliente = await http.GetFromJsonAsync<Cliente>($"/api/cliente/{Id}");
    }

    async Task Enviar()
    {
        HttpResponseMessage respuesta = await http.PutAsJsonAsync($"/api/cliente/{Id}", cliente);

        if (respuesta.IsSuccessStatusCode)
        {
            navegador.NavigateTo("/cliente");
        }
    }
}