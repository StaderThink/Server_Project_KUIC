@inject HttpClient http
@inject NavigationManager navegador

@page "/cliente/registrar"
@layout AppLayout

<h2>Registrar cliente</h2>

@if (mensaje is string)
{
    <blockquote class="is-warn">
        <p>@mensaje</p>
    </blockquote>
}

<form @onsubmit="Enviar" @onsubmit:preventDefault>
    <div class="grid xs-1 md-2 has-gap">
        <div class="field">
            <label for="rut">RUT</label>
            <input id="rut" type="number" placeholder="###" class="@(yaExiste ? "input is-error" : "input")" @bind="cliente.Rut" @onfocusout="BuscarExistencia" required />

            @if (yaExiste)
            {
                <small class="is-error">Este RUT ya ha sido registrado</small>
            }

            else
            {
                <small>Número de registro único tributario</small>
            }
        </div>

        <div class="field">
            <label for="nombre">Nombre</label>
            <input id="nombre" type="text" placeholder="Ej. Google LLC" class="input" @bind="cliente.Nombre" required />
        </div>

        <div class="field">
            <label for="encargado">Encargado</label>
            <input id="encargado" type="text" placeholder="Ej. Juan Avellano" class="input" @bind="cliente.Encargado" required />
        </div>

        <div class="field">
            <label for="correo">Correo</label>
            <input id="correo" type="email" placeholder="correo@dominio.com" class="input" @bind="cliente.Correo" required />
        </div>

        <div class="field">
            <label for="direccion">Direccion</label>
            <input id="direccion" class="input" type="text" placeholder="Ej: Calle 25 #125-74" @bind="cliente.Direccion" required />
        </div>

        <div class="field">
            <label for="telefono">Teléfono</label>
            <div class="control is-attached">
                <span class="button is-static">+57</span>
                <input id="telefono" type="tel" placeholder="###" minlength="7" class="input" @bind="cliente.Telefono" required />
            </div>
        </div>

        <div class="field is-inline">
            <label for="activo">Activo</label>
            <input type="checkbox" class="checkbox" @bind="cliente.Activo" />
        </div>
    </div>

    <div class="field">
        <div class="control is-grouped">
            @if (cargando)
            {
                <button class="is-prime has-loader" disabled>Registrar</button>
            }

            else
            {
                <button class="is-prime" disabled="@yaExiste">Registrar</button>
            }

            <a href="/cliente" class="button is-outline">Cancelar</a>
        </div>
    </div>
</form>

@code {
    Cliente cliente { get; set; } = new Cliente();

    bool yaExiste = false;
    string mensaje;
    bool cargando = false;

    async Task Enviar()
    {
        cargando = true;

        try
        {
            HttpResponseMessage respuesta = await http.PostAsJsonAsync("/api/cliente", cliente);

            if (respuesta.IsSuccessStatusCode)
            {
                navegador.NavigateTo("/cliente");
            }

            else
            {
                if (respuesta.StatusCode == HttpStatusCode.Unauthorized)
                {
                    mensaje = "¿Porque estas en esta ruta sin no tienes autorización?";
                }

                else
                {
                    mensaje = "Hubo un error al insertar";
                }
            }
        }

        catch
        {
            mensaje = "Hubo un error al insertar";
        }

        finally
        {
            cargando = false;
        }
    }

    async Task BuscarExistencia()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(cliente.Rut))
            {
                yaExiste = false;
                return;
            }

            HttpResponseMessage respuesta = await http.GetAsync($"/api/cliente?buscar={cliente.Rut}");

            if (respuesta.IsSuccessStatusCode)
            {
                var existencias = await respuesta.Content.ReadFromJsonAsync<Cliente[]>();
                yaExiste = existencias.Length > 0;
            }

            else
            {
                yaExiste = true;
            }
        }

        catch
        {
            yaExiste = true;
        }
    }
}
