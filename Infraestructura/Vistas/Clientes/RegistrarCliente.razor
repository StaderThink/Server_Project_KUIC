@inject HttpClient http
@inject NavigationManager navegador

@page "/cliente/registrar"
@layout AppLayout

<h3>Registrar Cliente</h3>

@if (mensaje is string)
{
    <blockquote class="is-warn">
        <p>@mensaje</p>
    </blockquote>
}

<form @onsubmit="Enviar">
    <div class="field">
        <label for="nombre">Nombre</label>
        <input id="nombre" class="input" type="text" @bind="cliente.Nombre" required />
    </div>
    <div class="field">
        <label for="encargado">Encargado</label>
        <input id="encargado" class="input" type="text" @bind="cliente.Encargado" />
    </div>
    <div class="field">
        <label for="rut">Rut</label>
        <input id="rut" class="@(rutExiste ? "input is-error" : "input")" type="number" placeholder="###" minlength="11" @bind="cliente.Rut" @onfocus="BuscarExistencia" required />

        @if (rutExiste)
        {
            <small class="is-error">Este RUT ya ha sido registrado</small>
        }

        else
        {
            <small>Número de RUT</small>
        }

    </div>
    <div class="field">
        <label for="correo">Correo</label>
        <input id="correo" class="input" type="email" @bind="cliente.Correo" required />
    </div>
    <div class="field">
        <label for="direccion">Direccion</label>
        <input id="direccion" class="input" type="text" @bind="cliente.Direccion" required />
    </div>
    <div class="field">
        <label for="telefono">Telefono</label>
        <input id="telefono" type="number" placeholder="###" minlength="10" class="input" @bind="cliente.Telefono" required />
    </div>
    <div class="field">
        <label for="activo">Activo</label>
        <input type="checkbox" class="toggle" @bind="cliente.Activo" />
    </div>
    <div class="field">
        <div class="control is-gruped">
            @if (cargando)
            {
                <button class="is-prime has-loader" disabled>Registrar</button>
            }

            else
            {
                <button class="is-prime" disabled="@rutExiste">Registrar</button>
            }
            <a href="/cliente" class="button is-outline">Cancelar</a>
        </div>
    </div>

</form>

@code {
    Cliente cliente { get; set; } = new Cliente();

    string mensaje;
    bool cargando = false;
    bool rutExiste = false;

    async Task Enviar()
    {
        cargando = true;

        try
        {
            HttpResponseMessage respuesta = await http.PostAsJsonAsync("/api/cliente", cliente);

            if (respuesta.IsSuccessStatusCode)
            {
                navegador.NavigateTo("/cliente");
            }

            else
            {
                if (respuesta.StatusCode == HttpStatusCode.Unauthorized)
                {
                    mensaje = "¿Porque estas en esta ruta si no tienes autorización?";
                }

                else
                {
                    mensaje = "Hubo un error al insertar";
                }
            }
        }

        catch
        {
            mensaje = "Hubo un error al insertar";
        }

        finally
        {
            cargando = false;
        }
    }

    async Task BuscarExistencia()
    {
        try
        {
            HttpResponseMessage respuesta = await http.GetAsync($"/api/cliente/existe?rut={cliente.Rut}");
            rutExiste = respuesta.IsSuccessStatusCode;
        }

        catch
        {
            rutExiste = true;
        }
    }
}
