@using System.Security.Claims
@using static System.Globalization.CultureInfo

@inject HttpClient http
@inject NavigationManager navegador
@inject AuthenticationStateProvider autentificacion

@page "/notificacion/registrar"
@layout AppLayout

<h3>Registrar nueva notificacion</h3>
<form @onsubmit="Enviar">
    <div class="field">
        <label for="texto">Mensaje</label>
        <input id="texto" class="input" type="text" @bind="notificacion.Texto" required/>
    </div>

    <div class="field">
        <label for="inicio">Fecha de inicio</label>
        <input id="inicio" class="input" type="datetime-local" @bind="notificacion.FechaInicio" @bind:format="@CurrentCulture.DateTimeFormat.SortableDateTimePattern" step="1" required/>
    </div>

    <div class="field">
        <label for="fin">Fecha de finalización</label>
        <input id="fin" class="input" type="datetime-local" @bind="notificacion.FechaFin" @bind:format="@CurrentCulture.DateTimeFormat.SortableDateTimePattern" step="1" required />
    </div>

    <div class="field">
        <div class="control is-grouped">
            @if (cargando)
            {
                <button class="is-prime has-loader" disabled>Registrar</button>
            }

            else
            {
                <button class="is-prime">Registrar</button>
            }
            <a href="/notificacion" class="button is-outline">Cancelar</a>
        </div>
    </div>
</form>

@code {
    Usuario[] usuarios { get; set; } = new Usuario[0];

    protected override async Task OnInitializedAsync()
    {
        usuarios = await http.GetFromJsonAsync<Usuario[]>("/api/usuario");
    }

    Notificacion notificacion { get; set; } = new Notificacion();

    bool cargando = false;

    async Task Enviar()
    {
        cargando = true;

        try
        {
            var estado = await autentificacion.GetAuthenticationStateAsync();
            var serial = estado.User.FindFirst(ClaimTypes.SerialNumber);

            if (serial is null)
            {
                // TODO
            }

            else
            {
                int id = int.Parse(serial.Value);
                notificacion.Autor = id;

                var respuesta = await http.PostAsJsonAsync("/api/notificacion", notificacion);

                if (respuesta.IsSuccessStatusCode)
                {
                    navegador.NavigateTo("/notificacion");
                }
            }
        }

        catch
        {
            // TODO
        }

        finally
        {
            cargando = false;
        }
    }
}
