@inject NavigationManager navegador
@inject HttpClient http

<div class="control is-grouped">
    <select class="input" @bind="detalle.Producto" disabled="@cargando">
        @if (cargando)
        {
            <option>Espere...</option>
        }

        else
        {
            <option value="0" disabled>Seleccionar...</option>
            @foreach (Producto producto in productos)
            {
                <option value="@producto.Id">@producto.Nombre.ToCapitalize()</option>
            }
        }
    </select>

    <input class="input is-grow" type="number" @bind="detalle.Cantidad" required />

    <button class="is-outline" @onclick="Eliminar">Quitar</button>
</div>

@code {
    Producto[] productos { get; set; } = new Producto[0];

    [Parameter]
    public DetallePedido detalle { get; set; }

    [Parameter]
    public EventCallback<DetallePedido> OnDeleted { get; set; }

    bool cargando = true;

    protected override async Task OnInitializedAsync()
    {
        cargando = true;

        try
        {
            productos = await http.GetFromJsonAsync<Producto[]>("/api/producto");
        }

        catch
        {
            throw;
        }

        finally
        {
            cargando = false;
        }
    }

    public void Eliminar()
    {
        if (OnDeleted.HasDelegate)
        {
            OnDeleted.InvokeAsync(detalle);
        }
    }
}
