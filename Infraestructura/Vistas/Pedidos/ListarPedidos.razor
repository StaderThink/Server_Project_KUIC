@inject HttpClient http
@inject NavigationManager navegador

@page "/pedido"
@page "/pedido/{busqueda}"
@layout AppLayout

<AuthorizeView Roles="pedidos">
    <Authorized>
        @if (cargando)
        {
            <div class="loader is-medium"></div>
        }
        else
        {
            <h2>Listar pedidos</h2>

            <a class="button is-prime" href="/pedido/registrar">Registrar pedido</a>

            <div class="grid has-gap xs-1 md-2">
                @foreach (var pedido in lista)
                {
                    <TarjetaPedido pedido="pedido" OnPedidoEliminado="ObtenerListado" />
                }
            </div>
        }
    </Authorized>

    <NotAuthorized>
        <p>Oops... parece que no tienes permisos para estar aquí</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    Pedido[] lista { get; set; }

    bool cargando = true;

    [Parameter]
    public string busqueda { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerListado();
    }

    private async Task ObtenerListado()
    {
        cargando = true;
        HttpResponseMessage respuesta = await http.GetAsync($"/api/pedido?buscar={busqueda}");

        try
        {
            if (respuesta.StatusCode == HttpStatusCode.OK)
            {
                lista = await respuesta.Content.ReadFromJsonAsync<Pedido[]>();
            }

            else
            {
                lista = null;
            }
        }

        catch (Exception ex)
        {
            lista = new Pedido[0];
            Console.WriteLine(ex);
        }

        finally
        {
            cargando = false;
        }
    }
}
