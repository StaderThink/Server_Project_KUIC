@inject HttpClient http
@inject NavigationManager navegador

<div id="searchbox">
    <input
        class="input"
        type="text"
        @bind="texto"
        @bind:event="oninput"
        @onkeyup="Buscar"
        placeholder="Buscar..." />

    <div class="@(mostrarBarra ? "suggestions visible" : "suggestions invisible")">
        <!-- usuarios -->

        @if (contadorUsuarios is string)
        {
            <a @onclick="RedirigirClientes" class="suggestion">
                <p>Usuarios</p>
                <span class="button is-static is-small">@contadorUsuarios</span>
            </a>
        }

        <!-- clientes -->

        @if (contadorClientes is string)
        {
            <a @onclick="RedirigirClientes" class="suggestion">
                <p>Clientes</p>
                <span class="button is-static is-small">@contadorClientes</span>
            </a>
        }

        <a class="suggestion">
            <p>Buscar "@texto"</p>
            <span class="button is-static is-small">En todo</span>
        </a>
    </div>
</div>

@code {
    bool mostrarBarra {
        get {
            return !string.IsNullOrWhiteSpace(texto);
        }
    }

    string texto;

    string contadorUsuarios;
    string contadorClientes;

    private async Task Buscar() {
        contadorUsuarios = await RealizarBusqueda<Usuario>(controlador: "usuario");
        contadorClientes = await RealizarBusqueda<Cliente>(controlador: "cliente");
    }

    private async Task<string> RealizarBusqueda<T>(string controlador)
    {
        string url = $"/api/{controlador}?buscar={texto}";

        var listado = await http.GetFromJsonAsync<T[]>(url);

        if (listado.Length > 9)
        {
            return "+9";
        }

        else if (listado.Length == 0)
        {
            return null;
        }

        else
        {
            return listado.Length.ToString();
        }
    }

    // redirecciones

    private void Redirigir(string controlador)
    {
        navegador.NavigateTo($"/{controlador}/{texto}", true);
    }

    private void RedirigirUsuario() => Redirigir(controlador: "usuario");

    private void RedirigirClientes() => Redirigir(controlador: "cliente");
}