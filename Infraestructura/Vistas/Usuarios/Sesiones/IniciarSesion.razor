@inject AuthenticationStateProvider proveedor
@using Autenticacion

<h1>Iniciar sesión</h1>

@if (error)
{
    <blockquote class="is-error">Hubo un error iniciando sesión</blockquote>
}

<div class="form">
    <div class="field">
        <label>Documento</label>

        <div class="control is-attached">
            <span class="button is-static">CC</span>
            <input type="text" pattern="[0-9]+" minlength="7" @bind="documento" placeholder="###" class="input" />
        </div>

        <small>Número de cédula de ciudadanía</small>
    </div>

    <div class="field">
        <label>Clave</label>
        <input type="password" @bind="clave" minlength="4" placeholder="###" class="input" />
    </div>

    <div class="field">
        <div class="control is-grouped">
            <button class="is-prime">Ingresar</button>
            @if (cargando)
            {
                <button class="is-prime has-loader" disabled>Ingresar</button>
            }

            else
            {
                <button class="is-prime" @onclick="Iniciar">Ingresar</button>
            }
        </div>
    </div>
</div>

@code {
    string documento;
    string clave;

    bool cargando = false;
    bool error = false;

    async Task Iniciar()
    {
        try
        {
            cargando = true;

            var nuevoProveedor = (BlazorAuthenticationProvider) proveedor;
            await nuevoProveedor.IniciarSesion(documento, clave);
        }

        catch (Exception ex)
        {
            error = true;
            Console.WriteLine(ex.ToString());
        }

        finally
        {
            cargando = false;
        }
    }
}
