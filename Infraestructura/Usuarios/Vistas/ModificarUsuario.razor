@page "/usuario/modificar/{Id:int}"
@layout AppLayout

@attribute [Authorize(Roles = "usuarios")]

@inject HttpClient http
@inject IToastService toaster

<nav class="breadcrumb">
    <ul>
        <li><a href="/usuario">Usuario</a></li>
        <li class="is-active"><a href="#">Modificar</a></li>
    </ul>
</nav>

<h3 class="title is-3">Modificar los datos #@Id</h3>
<hr />

@if (Usuario is null)
{
    <p class="subtitle is-5">Se están cargando los datos del usuario, por favor espere.</p>
}

else
{
<EditForm Model="Usuario" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Tipo de documento">
                <SelectField @bind-Value="Usuario.TipoDocumento" Context="value" Data="TiposDeDocumento" disabled>
                    <option value="@value">@value</option>
                </SelectField>
                <FormFeedback For="() => Usuario.TipoDocumento" />
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Documento">
                <NumberField id="documento" placeholder="#########" @bind-Value="Usuario.Documento" disabled />
                <FormFeedback For="() => Usuario.Documento" />
            </FormField>
        </div>
    </div>

    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Nombre">
                <TextField id="nombre" placeholder="Juan Pablo" @bind-Value="Usuario.Nombre" />
                <FormFeedback For="() => Usuario.Nombre" />
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Apellido">
                <TextField id="apellido" placeholder="Ramirez Velasquez" @bind-Value="Usuario.Apellido" />
                <FormFeedback For="() => Usuario.Apellido" />
            </FormField>
        </div>
    </div>

    <div class="columns is-mobile">
        <div class="column is-half">
            <FormField Label="Correo Electrónico">
                <EmailField id="correo" placeholder="ejemplo@ejemplo.com" @bind-Value="Usuario.Correo" />
                <FormFeedback For="() => Usuario.Correo" />
            </FormField>
        </div>

        <div class="column is-half">
            <FormField Label="Cargo">
                <SelectField id="cargo" @bind-Value="Usuario.Cargo" Context="value" Data="ListadoCargos">
                    <option value="@value.Id">@value.Nombre.ToCapitalize()</option>
                </SelectField>
                <FormFeedback Help="Esto define los accesos que tiene el usuario" For="() => Usuario.Cargo" />
            </FormField>
        </div>
    </div>

    <FormField Label="Teléfono">
        <PhoneField id="telefono" placeholder="######" @bind-Value="Usuario.Telefono" />
        <FormFeedback For="() => Usuario.Telefono" />
    </FormField>

    <FormField>
        <CheckboxField id="activo" @bind-Value="Usuario.Activo">
            <span>El usuario está activo en el sistema.</span>
        </CheckboxField>
    </FormField>

    <FormButtons IsLoading="saving">
        <CancelButton To="/usuario">Cancelar</CancelButton>
        <SubmitButton>Guardar</SubmitButton>
    </FormButtons>
</EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Usuario Usuario;
    private bool saving = false;

    private Cargo[] ListadoCargos = new Cargo[0];
    private string[] TiposDeDocumento = Enum.GetNames(typeof(TipoDocumento));

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Usuario = await http.GetFromJsonAsync<Usuario>($"/api/usuario/{Id}");
            ListadoCargos = await http.GetFromJsonAsync<Cargo[]>("/api/cargo");
        }

        catch
        {
            toaster.ShowError("Hubo un error al cargar el registro, intente más tarde");

#if DEBUG
            throw;
#endif
        }
    }

    private async Task Save()
    {
        saving = true;

        try
        {
            var response = await http.PutAsJsonAsync<Usuario>($"/api/usuario/{Id}", Usuario);

            if (response.IsSuccessStatusCode)
            {
                toaster.ShowSuccess("Datos actualizados correctamente");
            }

            else
            {
                toaster.ShowWarning("No se logro guardar los datos, vuelve a intentar");
            }
        }

        catch
        {
            toaster.ShowError("Hubo un error desconocido, intente más tarde");

#if DEBUG
            throw;
#endif
        }

        finally
        {
            saving = false;
        }
    }
}
