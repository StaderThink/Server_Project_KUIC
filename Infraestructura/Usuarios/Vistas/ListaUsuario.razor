@page "/usuario"
@layout AppLayout

@attribute [Authorize(Roles = "usuarios")]

@inject HttpClient http
@inject IToastService toaster

    <div class="level">
        <div class="level-left">
            <h3 class="title is-3">Usuarios</h3>
        </div>
        <div class="level-right">
            <div class="buttons">
                <a href="/usuario/registrar" class="button is-primary">
                    <span class="icon">
                        <box-icon name='plus'></box-icon>
                    </span>
                    <span>Nuevo</span>
                </a>
            </div>
        </div>
    </div>

<hr />
 
@if (loading)
{
    <div class="loader"></div>
}

else
{
    <div class="columns is-desktop is-multiline">
        @foreach (var usuario in list)
        {
            <TarjetaUsuario Usuario="usuario" OnDeleted="UserDeleted" />
        }
    </div>
}

@code {
    private Usuario[] list;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        await GetList();
    }

    private async Task GetList()
    {
        loading = true;

        try
        {
            list = await http.GetFromJsonAsync<Usuario[]>("/api/usuario");
        }

        catch
        {
            toaster.ShowError("Hubo un error recuperando los datos, por favor intente más tarde");

#if DEBUG
            throw;
#endif
        }

        finally
        {
            loading = false;
        }
    }

    private async Task UserDeleted(Usuario usuario)
    {
        await GetList();
    }
}